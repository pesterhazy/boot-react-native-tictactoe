 (println *clojure-version*)
(start-repl)
(js/fetch)
(js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json")
(-> (js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json") (.next (fn [r] (prn r))))
(-> (js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json") (.then (fn [r] (prn r))))
(prn "asdf")
(enable-console-print!)
(prn "asdf")
(enable-console-print!)
(prn "asdf")
(js/console.log "bang")
(+ 5 30
)
(js/console.log "bang")
(js/console.log "a")
(-> (js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json") (.then (fn [r] (prn r))))
(-> (js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json") (.then #(-> % .json) (.then (fn [r] (prn r))))
(-> (js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json") (.then #(-> % .json)) (.then (fn [r] (prn r))))
(-> (js/fetch "https://en.wikipedia.org/w/api.php?action=query&titles=Main%20Page&prop=revisions&rvprop=content&format=json") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn r))))
(-> (js/fetch "https://echo.getpostman.com/status/200") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn r))))
(-> (js/fetch "https://echo.getpostman.com/status/201") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn r))))
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn r))))
(in-ns 'mattsum.simple-example.core)
(root-view)
@!state
@mattsum.simple-example.core/!state
(swap! mattsum.simple-example.core/!state update :count inc)
(start-repl)
(+ 3 3)
(swap! mattsum.simple-example.core/!state update :count inc)
(require 'mattsum.simple-example.core)
(swap! mattsum.simple-example.core/!state update :count inc)
(require 'mattsum.simple-example.core)
(swap! mattsum.simple-example.core/!state update :count inc)
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn r))))
(enable-console-print!)
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn r))))
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (js/console.log "asdf" r))))
(prn "hi")
(js/console.log "hi")
(js/console.log "h1i")
(js/console.log "h1i2")
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (js/console.log "asdf" r))))
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn "asdf" r))))
(js/console.log (type 5))
(-> (js/fetch "https://echo.getpostman.com/headers") (.then #(-> % .json)) (.then #(-> % js->clj)) (.then (fn [r] (prn "asdf" r))))
js/global
 (.keys js/global)
 (Object.keys js/global)
(prn (Object.keys js/global))
(prn (-> js/global Object.keys js->clj))
(-> js/global Object.keys js->clj)
(-> js/global.ErrorUtils Object.keys js->clj)
(-> js/global.ErrorUtils .getGlobalHandler)
(assert false "boom")
(swap! mattsum.simple-example.core/!state update :count inc)
(+ 3 5)
